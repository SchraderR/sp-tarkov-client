@use '@fontsource/roboto/300' as *;
@use '@fontsource/roboto/400' as *;
@use '@fontsource/roboto/500' as *;
@use 'material-symbols/outlined';
@use '@angular/material' as mat;
@use 'material-symbols' as *;

html,
body {
  height: 100%;
  font-family: "Roboto";

  color-scheme: light dark;
  @include mat.theme((
    color: mat.$violet-palette,
    typography: Roboto,
    density: 0
  ));
}

body {
  margin: 0;

  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-thumb {
    background: #666;
    border-radius: 20px;
  }

  ::-webkit-scrollbar-track {
    background: #dddddd;
    border-radius: 20px;
  }
}

.tooltip-multiline {
  white-space: pre-line;
}

.github-info-panel {
  color: white;
  padding: 8px;
  background: #666 !important;
}

.already-installed-icon-container {
  display: flex !important;
  justify-content: center;
  align-items: center;
  height: 48px !important;
  width: 48px !important;
}

.mod-install-instance-warning {
  display: flex !important;
  justify-content: center;
  align-items: center;
  height: 48px !important;
  width: 48px !important;
  margin: unset !important;
}

mat-icon {
  font-weight: 200 !important;
}

.snackbar-multiline {
  white-space: pre-wrap
}

.font-weight-400 {
  font-weight: 400 !important;
}

.overflow-auto {
  overflow: auto;
}

.full-width {
  width: 100%;
}

.full-height {
  height: 100%;
}

.spacer {
  flex: 1 1 auto;
}

.font-x-small {
  font-size: x-small;
}

.font-small {
  font-size: small;
}

.text-ellipsis {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.one-line-clamp {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 1;
  overflow: hidden;
}

.flex {
  display: flex;
}

.justify-center {
  justify-content: center;
}

.align-center {
  align-items: center;
}

.image-spt-version {
  &.card-badge {
    display: flex;
    position: absolute;
    justify-content: center;
    bottom: 0;
    color: white;
    padding: 2px 4px;
    font-size: 12px;
    border-radius: 4px 4px 4px 0;
  }

  &.badge.label.green {
    background-color: #090;
  }

  &.badge.label.slightly-outdated {
    background-color: #b1e433;
    color: #323947;
  }

  &.badge.label.yellow {
    background-color: #ff0;
    color: #323947;
  }

  &.badge.label.red {
    background-color: #c00;
  }

  &.badge.label.black {
    background-color: black;
  }
}
.center-page {
  -webkit-app-region: drag;
  display: flex;
  width: 100vw;
  height: 100vh;
  align-items: center;
  text-align: center;
}

.sk-cube-grid {
  width: 200px;
  height: 200px;
  margin: 0 auto;
}

.sk-cube-grid {
  & span {
    font-style: italic;
    font-size: small;
  }

  .sk-cube {
    width: 33%;
    height: 33%;
    float: left;
    -webkit-animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
    animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;

    @media (prefers-color-scheme: dark) {
      background-color: #dadada;
    }

    @media (prefers-color-scheme: light) {
      background-color: #333;
    }
  }
}

.sk-cube-grid .sk-cube1 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.sk-cube-grid .sk-cube2 {
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.sk-cube-grid .sk-cube3 {
  -webkit-animation-delay: 0.4s;
  animation-delay: 0.4s;
}

.sk-cube-grid .sk-cube4 {
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.sk-cube-grid .sk-cube5 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

.sk-cube-grid .sk-cube6 {
  -webkit-animation-delay: 0.3s;
  animation-delay: 0.3s;
}

.sk-cube-grid .sk-cube7 {
  -webkit-animation-delay: 0s;
  animation-delay: 0s;
}

.sk-cube-grid .sk-cube8 {
  -webkit-animation-delay: 0.1s;
  animation-delay: 0.1s;
}

.sk-cube-grid .sk-cube9 {
  -webkit-animation-delay: 0.2s;
  animation-delay: 0.2s;
}

@-webkit-keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
    transform: scale3D(1, 1, 1);
  }
  35% {
    -webkit-transform: scale3D(0, 0, 1);
    transform: scale3D(0, 0, 1);
  }
}

@keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
    transform: scale3D(1, 1, 1);
  }
  35% {
    -webkit-transform: scale3D(0, 0, 1);
    transform: scale3D(0, 0, 1);
  }
}
